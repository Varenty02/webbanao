@using webbanao.Models.Blog
@model IEnumerable<webbanao.Models.Blog.Category>
@using webbanao.Menu
@inject AdminSidebarService _adminSidebarService
@{
    ViewData["Title"] = "Index";
    
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th>Tùy chọn</th>
        </tr>
    </thead>
    <tbody>

        @foreach(var item in Model){
            await RenderCategory(item, 0);
        }
    </tbody>
</table>
@{
    async Task RenderCategory(Category item,int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", level));
        
            <tr>
                <td>
                    @Html.Raw(prefix)
                <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a> 
                    
                </td>
                <td>
                
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
        </tr>
        if (item.ChildrenCategory?.Count > 0)
        {
            foreach(var child in item.ChildrenCategory)
            {
                await RenderCategory(child, level + 1);
            }
        }

    }
}
@{
    _adminSidebarService.SetActive("Category", "Index", "Blog");
}

@section Sidebar
{
    @Html.Raw(_adminSidebarService.renderHtml())
}